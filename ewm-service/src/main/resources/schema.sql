CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(100),
    email VARCHAR(300) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(100) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(120) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    category_id INTEGER NOT NULL,
    location_id BIGINT NOT NULL,
    created_time timestamp,
    event_date timestamp NOT NULL,
    published_time timestamp,
    participant_limit INTEGER,
    paid BOOLEAN,
    request_moderation BOOLEAN,
    initiator_id BIGINT NOT NULL,
    state VARCHAR(10),
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_events_to_category FOREIGN KEY(category_id) REFERENCES categories(id),
    CONSTRAINT fk_events_to_location FOREIGN KEY(location_id) REFERENCES locations(id) ON DELETE CASCADE,
    CONSTRAINT fk_events_to_users FOREIGN KEY(initiator_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    requester_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    created_time timestamp,
    status VARCHAR(10),
    CONSTRAINT fk_requests_to_users FOREIGN KEY(requester_id) REFERENCES users(id),
    CONSTRAINT fk_requests_to_events FOREIGN KEY(event_id) REFERENCES events(id),
    CONSTRAINT pk_requests PRIMARY KEY (id),
    CONSTRAINT requester_event_pk UNIQUE (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title VARCHAR(100) NOT NULL,
    pinned BOOLEAN,
    CONSTRAINT pk_compilations PRIMARY KEY (id),
    CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS compilation_events (
    compilation_id BIGINT NOT NULL REFERENCES compilations (id),
    event_id BIGINT NOT NULL REFERENCES events (id),
    CONSTRAINT compilation_event_pk PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS subscriptions
(
    user_id   BIGINT NOT NULL,
    follower_id BIGINT NOT NULL,
    CONSTRAINT pk_subscriptions PRIMARY KEY (user_id, follower_id),
    CONSTRAINT fk_user_to_users
        FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_follower_to_users
        FOREIGN KEY(follower_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT follower_user_pk UNIQUE (user_id, follower_id)
);